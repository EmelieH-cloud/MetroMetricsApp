// <auto-generated />
using System;
using MetroMetricsApp.Databas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MetroMetricsApp.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231123111900_addindex")]
    partial class addindex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MetroMetricsApp.Modeller.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("country_id");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(10, 7)")
                        .HasColumnName("latitude");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(10, 7)")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("MetroMetricsApp.Modeller.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Capital")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("capital");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency_name");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nationality");

                    b.Property<int>("NumericCode")
                        .HasColumnType("int")
                        .HasColumnName("numeric_code");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone_code");

                    b.Property<string>("TimezoneJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timezones");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("MetroMetricsApp.Modeller.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<string>("Assignment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("assignment");

                    b.Property<long>("DurationInMs")
                        .HasColumnType("bigint")
                        .HasColumnName("duration_ms");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("timestamp");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MetroMetricsApp.Modeller.City", b =>
                {
                    b.HasOne("MetroMetricsApp.Modeller.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
